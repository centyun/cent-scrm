<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.centyun.user.mapper.ChargeMapper">
	<resultMap id="ChargeResultMap" type="com.centyun.user.domain.Charge">
		<id column="id" jdbcType="VARCHAR" property="id"/>
		<result column="tenant_id" jdbcType="VARCHAR" property="tenantId"/>
		<result column="tenant_name" jdbcType="VARCHAR" property="tenantName"/>
		<result column="product_id" jdbcType="VARCHAR" property="productId"/>
		<result column="product_name" jdbcType="VARCHAR" property="productName"/>
		<result column="money" jdbcType="NUMERIC" javaType="double" property="money"/>
		<result column="quota" jdbcType="INTEGER" property="quota"/>
		<result column="expired_time" jdbcType="TIMESTAMP" javaType="java.util.Date" property="expiredTime"/>
		<result column="note" jdbcType="VARCHAR" property="note"/>
		<result column="status" jdbcType="INTEGER" property="status"/>
		<result column="charge_administrator" jdbcType="VARCHAR" property="chargeAdministrator"/>
		<result column="charge_time" jdbcType="TIMESTAMP" javaType="java.util.Date" property="chargeTime"/>
		<result column="editor" jdbcType="VARCHAR" property="editor"/>
		<result column="edit_time" jdbcType="TIMESTAMP" javaType="java.util.Date" property="editTime"/>
        <result column="tenant_name" jdbcType="VARCHAR" property="tenantName"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="charge_administrator_name" jdbcType="VARCHAR" property="chargeAdministratorName"/>
        <result column="editor_name" jdbcType="VARCHAR" property="editorName"/>
	</resultMap>
	
	<select id="getPageCharges" resultMap="ChargeResultMap">
		select a.*, t.name tenant_name, p.name product_name, m1.display_name charge_administrator_name, m2.display_name editor_name from us_charge a
		left join us_tenant t on a.tenant_id=t.id left join us_product p on a.product_id=p.id
        left join us_administrator m1 on a.charge_administrator=m1.id left join us_administrator m2 on a.editor=m2.id
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="searchValue != null">
		        ( t.name like concat('%', #{searchValue}, '%')
		        or p.name like concat('%', #{searchValue}, '%')
		        or a.note like concat('%', #{searchValue}, '%')
		        or quota = #{searchValue} )
		    </if>
		    <if test="tenantId != null">and a.tenant_id=#{tenantId}</if>
		</trim>
		<if test="orders != null">
		    order by
		    <foreach collection="orders" item="order" separator=",">CONVERT(${order.key} USING gbk) ${order.value}</foreach>
		</if>
	</select>
	
	<select id="getChargeById" resultMap="ChargeResultMap">
        select a.*, t.name tenant_name, p.name product_name, m1.display_name charge_administrator_name, m2.display_name editor_name from us_charge a
        left join us_tenant t on a.tenant_id=t.id left join us_product p on a.product_id=p.id
        left join us_administrator m1 on a.charge_administrator=m1.id left join us_administrator m2 on a.editor=m2.id
		where a.id=#{id}
	</select>
	
	<insert id="addCharge">
	    insert into us_charge (id, tenant_id, product_id, money, quota, expired_time, note, status, charge_administrator, charge_time)
	    values(#{id}, #{tenantId}, #{productId}, #{money}, #{quota}, #{expiredTime}, #{note}, 1, #{chargeAdministrator}, now())
	</insert>
	
	<update id="updateStatus">
	    update us_charge set status=#{status}, editor=#{editor}, edit_time=now() where id in
	    <foreach collection="ids" item="id" open="(" separator="," close=")">#{id}</foreach>
	</update>
	
</mapper>